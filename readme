Assignment 3 readme File

------------------------------------------------------------------------
What is your name?

Anass Mountasser

------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

The course's lectures.

The course's precepts.

The course's website.

The course's textbooks.

The man pages on the armlab cluster.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

It was extremely helpful in understanding abstract data types and the
power of an expanding hash table. It was fun seeing the sacrifice
of memory for faster time.

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.

------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablelist.c: line 60: medium priority:
Do you want to validate 'pvValue' through an assert?
   I disagree with this warning because sometimes, the testing client
   tries to insert a null value. I can't assert pvValue not being
   null, as that would crash the testing client.

symtablelist.c: line 83: medium priority:
Do you want to validate 'pvValue' through an assert?
   I disagree with this warning because sometimes, the testing client
   tries to insert a null value. I can't assert pvValue not being
   null, as that would crash the testing client.

symtablelist.c: line 145: medium priority:
Do you want to validate 'pvExtra' through an assert?
   I disagree with this warning because the pfApply function can
   sometimes take a null pointer as pvExtra if the function
   doesn't need the extra arguement. Thus, there is no need
   to check through an assert.

------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None.

------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

symtablehash.c: line 173: medium priority:
Do you want to validate 'pvValue' through an assert?
   I disagree with this warning because sometimes, the testing client
   tries to insert a null value. I can't assert pvValue not being
   null, as that would crash the testing client.

symtablehash.c: line 201: medium priority:
Do you want to validate 'pvValue' through an assert?
   I disagree with this warning because sometimes, the testing client
   tries to insert a null value. I can't assert pvValue not being
   null, as that would crash the testing client.

symtablehash.c: line 282: medium priority:
Do you want to validate 'pvExtra' through an assert?
   I disagree with this warning because the pfApply function can
   sometimes take a null pointer as pvExtra if the function
   doesn't need the extra arguement. Thus, there is no need
   to check through an assert.

------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.004324 seconds.
-- 5000 bindings consumed 1.028770 seconds.
-- 50000 bindings consumed 101.584865 seconds.
-- 500000 bindings consumed more than 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.014243 seconds.
-- 50000 bindings consumed 0.366218 seconds.
-- 500000 bindings consumed 67.490019 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0.000000 seconds.
-- 500 bindings consumed 0.000000 seconds.
-- 5000 bindings consumed 0.014018 seconds.
-- 50000 bindings consumed 0.154731 seconds.
-- 500000 bindings consumed 3.011207 seconds.
